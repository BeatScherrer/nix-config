# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{
  config,
  lib,
  modulesPath,
  pkgs,
  ...
}:

{
  imports = [ (modulesPath + "/installer/scan/not-detected.nix") ];

  boot.initrd.availableKernelModules = [
    "nvme"
    "thunderbolt"
    "xhci_pci"
    "ahci"
    "usbhid"
    "usb_storage"
    "sd_mod"
    "amdgpu"
  ];

  boot.initrd.kernelModules = [ "amdgpu" ];

  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  hardware.graphics = {
    enable = true;
    enable32Bit = true;
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/6e12a3a2-6d58-4582-99f3-86067aeba16a";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/FC82-E16D";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

    swapDevices =
    [ { device = "/dev/disk/by-uuid/b7c585df-c13b-4745-be94-709e9e07195a"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp10s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  hardware.bluetooth = {
    enable = true;
    settings = {
      General = {
        Name = "Hello";
        ControllerMode = "dual";
        FastConnectable = "true";
        Experimental = "true";
      };
      Policy = {
        AutoEnable = "true";
      };
    };
  };

  # FIXME: the hwmon directories are not stable
  # https://bbs.archlinux.org/viewtopic.php?id=80012
  # https://github.com/lm-sensors/lm-sensors/issues/227
  # hardware.fancontrol = {
  #   enable = true;
  #   config = ''
  #     # Configuration file generated by pwmconfig, changes will be lost
  #     INTERVAL=10
  #     DEVPATH=hwmon5=devices/pci0000:00/0000:00:02.1/0000:05:00.0/0000:06:0c.0/0000:6b:00.0/usb5/5-6/5-6:1.1/0003:0C70:F012.0006 hwmon6=devices/pci0000:00/0000:00:02.1/0000:05:00.0/0000:06:0c.0/0000:6b:00.0/usb5/5-7/5-7:1.1/0003:0C70:F011.0008
  #     DEVNAME=hwmon5=highflownext hwmon6=octo
  #     FCTEMPS=hwmon6/pwm6=hwmon5/temp1_input hwmon6/pwm4=hwmon5/temp1_input hwmon6/pwm3=hwmon5/temp1_input hwmon6/pwm2=hwmon5/temp1_input hwmon6/pwm1=hwmon5/temp1_input
  #     FCFANS=hwmon6/pwm6=hwmon6/fan6_input hwmon6/pwm4=hwmon6/fan4_input hwmon6/pwm3=hwmon6/fan3_input hwmon6/pwm2=hwmon6/fan2_input hwmon6/pwm1=hwmon6/fan1_input
  #     MINTEMP=hwmon6/pwm6=20 hwmon6/pwm4=20 hwmon6/pwm3=20 hwmon6/pwm2=20 hwmon6/pwm1=20
  #     MAXTEMP=hwmon6/pwm6=40 hwmon6/pwm4=40 hwmon6/pwm3=40 hwmon6/pwm2=40 hwmon6/pwm1=40
  #     MINSTART=hwmon6/pwm6=150 hwmon6/pwm4=150 hwmon6/pwm3=150 hwmon6/pwm2=150 hwmon6/pwm1=150
  #     MINSTOP=hwmon6/pwm6=100 hwmon6/pwm4=100 hwmon6/pwm3=100 hwmon6/pwm2=100 hwmon6/pwm1=100
  #   '';
  # };

  # WARN: Hwmon sensors do not appear under /dev, so there’s no device node for udev to rename or symlink. Instead, hwmon devices are sysfs only.
  # so this is not a solution to stabilize the hwmon indices...
  # services.udev.extraRules = ''
  #   KERNEL=="hwmon*", SUBSYSTEM=="hwmon", ATTR{name}=="highflownext", SYMLINK+="hwmon-highflownext"
  #   KERNEL=="hwmon*", SUBSYSTEM=="hwmon", ATTR{name}=="octo", SYMLINK+="hwmon-octo"
  # '';

  # NOTE: use this if the below does not work with udev rules and fancontrol...
  # environment.systemPackages = with pkgs; [ fan2go ];

  # NOTE:
  # to get the attributes of a device:
  #   udevadm info --attribute-walk --path=$(udevadm info --query=path --name=/dev/video2)
  #   udevadm info -a -n /dev/sdb | less
  #   sudo udevadm info -a /sys/class/hwmon/hwmon0
  # to reload the rules:
  #    sudo udevadm control --reload
  #    sudo udevadm trigger
}
